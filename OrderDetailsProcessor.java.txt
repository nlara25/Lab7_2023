import java.io.*;
import java.util.*;

public class OrderDetailsProcessor {

    public static void main(String[] args) {
        ArrayList<String[]> data = readFile("C:\\Users\\checkout\\Downloads\\OrderDetails.txt");
        if (data != null) {
            processOrderDetails(data);
        } else {
            System.out.println("No valid data found.");
        }
    }

    public static ArrayList<String[]> readFile(String filePath) {
        ArrayList<String[]> dataList = new ArrayList<>();
        try {
            BufferedReader reader = new BufferedReader(new FileReader(filePath));
            String line;
            while ((line = reader.readLine()) != null) {
                String[] values = line.split(",");
                if (values.length == 5) {
                    dataList.add(values);
                }
            }
            reader.close();
            return dataList;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    public static void processOrderDetails(ArrayList<String[]> orderData) {
        for (String[] values : orderData) {
            int quantity = Integer.parseInt(values[0]);
            double unitPrice = Double.parseDouble(values[1]);
            String orderId = values[2];
            String productId = values[3];
            double discount = Double.parseDouble(values[4]);

            double totalPrice = calculateTotalPrice(quantity, unitPrice, discount);

            System.out.println("Order ID: " + orderId);
            System.out.println("Product ID: " + productId);
            System.out.println("Unit Price: $" + unitPrice);
            System.out.println("Quantity: " + quantity);
            System.out.println("Discount: " + discount);
            System.out.println("Total Price: $" + totalPrice);
            System.out.println("--------");
        }
    }

    public static double calculateTotalPrice(int quantity, double unitPrice, double discount) {
        return unitPrice * quantity - (discount * quantity * unitPrice);
    }
}